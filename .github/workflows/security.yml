name: Security & Dependencies

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: "3.12"

jobs:
  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run Bandit security linter
        run: |
          uv add --dev bandit[toml]
          uv run bandit -r promptdev/ -f json -o bandit-report.json || true
          uv run bandit -r promptdev/

      - name: Run Safety check
        run: |
          uv add --dev safety
          uv run safety check --json --output safety-report.json || true
          uv run safety check

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate

  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install ${{ env.PYTHON_VERSION }}

      - name: Update dependencies
        run: |
          uv sync --upgrade
          uv lock --upgrade

      - name: Run tests with updated dependencies
        run: |
          uv sync --all-extras
          uv run pytest -v

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update dependencies"
          title: "ðŸ”„ Automated dependency updates"
          body: |
            ## ðŸ”„ Automated Dependency Updates
            
            This PR updates project dependencies to their latest versions.
            
            ### Changes
            - Updated all dependencies to latest compatible versions
            - Regenerated lock file
            - All tests passing with updated dependencies
            
            ### Testing
            - âœ… All tests pass
            - âœ… Linting passes
            - âœ… Security checks pass
            
            This PR was created automatically by GitHub Actions.
          branch: chore/update-dependencies
          delete-branch: true
