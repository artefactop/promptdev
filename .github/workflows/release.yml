name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  release:
    types: [published]

env:
  PYTHON_VERSION: "3.12"

jobs:
  test:
    name: Run Tests Before Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run tests
        run: uv run pytest -v

      - name: Run linting
        run: |
          uv run ruff check .
          uv run ruff format --check .

  build-and-publish:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'release' && github.event.action == 'published'
    environment:
      name: pypi
      url: https://pypi.org/p/promptdev
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Build package
        run: uv build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true

  create-github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Build package
        run: uv build

      - name: Extract release notes
        id: extract-release-notes
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          # Create release notes (customize as needed)
          cat > release_notes.md << EOF
          ## PromptDev v$VERSION
          
          ### Features
          - Modern Python 3.12+ prompt evaluation framework
          - PydanticAI integration for type-safe evaluation
          - Beautiful tree-style failure reporting
          - Concurrent execution support
          - Comprehensive evaluator types
          
          ### Installation
          \`\`\`bash
          pip install promptdev
          \`\`\`
          
          ### Quick Start
          \`\`\`bash
          promptdev eval your-config.yaml
          \`\`\`
          
          For full documentation, visit the [README](https://github.com/artefactop/promptdev#readme).
          EOF

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          body_path: release_notes.md
          tag_name: ${{ github.ref_name }}
          name: PromptDev ${{ steps.extract-release-notes.outputs.version }}
          draft: false
          prerelease: false
